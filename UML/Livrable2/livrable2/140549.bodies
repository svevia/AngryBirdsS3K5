class Matrice
!!!153605.java!!!	Matrice()
		setNombreLigne(1);
		setNombreColonne(1);
		setMatrice(getNombreLigne(), getNombreColonne());
!!!153733.java!!!	Matrice(in ligne : int, in colonne : int)
		setNombreLigne(ligne);
		setNombreColonne(colonne);
		setMatrice(getNombreLigne(), getNombreColonne());
!!!153861.java!!!	Matrice(inout matrice : int [[][]])
		setNombreLigne(matrice.length);
		setNombreColonne(matrice[0].length);
		setMatrice(matrice);
!!!153989.java!!!	Matrice(inout m : Matrice)
		setNombreLigne(m.getNombreLigne());
		setNombreColonne(m.nombreColonne);
		setMatrice(m.getMatrice());
!!!154117.java!!!	setValueAtIdx(in ligne : int, in colonne : int, in value : int) : void
		if(0 <= ligne && ligne < this.matrice.length && 0 <= colonne && colonne < this.matrice[ligne].length)
			this.matrice[ligne][colonne] = value;
!!!154245.java!!!	getValueAtIdx(in ligne : int, in colonne : int) : int
		return ((0 <= ligne && ligne < nombreLigne) && (0 <= colonne && colonne < nombreColonne))?this.matrice[ligne][colonne]:null;
!!!154373.java!!!	haveTheSameDimensions(inout m : Matrice) : boolean
		return (getNombreLigne() == m.getNombreLigne() && getNombreColonne() == m.getNombreColonne());
!!!154501.java!!!	additionMatrice(inout m : Matrice) : void
		if(haveTheSameDimensions(m))
			for(int ligne = 0; ligne < nombreLigne; ligne++)
				for(int colonne = 0; colonne < nombreColonne; colonne++)
					this.matrice[ligne][colonne] += m.getValueAtIdx(ligne, colonne);
!!!154629.java!!!	newAdditionMatrice(inout m : Matrice) : Matrice
		Matrice result = new Matrice(nombreLigne, nombreColonne);
		if(haveTheSameDimensions(m))
			for(int ligne = 0; ligne < nombreLigne; ligne++)
				for(int colonne = 0; colonne < nombreColonne; colonne++)
					result.setValueAtIdx(ligne, colonne, this.getValueAtIdx(ligne, colonne) + m.getValueAtIdx(ligne, colonne));
		return result;
!!!154757.java!!!	soustractionMatrice(inout m : Matrice) : void
		if(haveTheSameDimensions(m))
			for(int ligne = 0; ligne < nombreLigne; ligne++)
				for(int colonne = 0; colonne < nombreColonne; colonne++)
					this.matrice[ligne][colonne] -= m.getValueAtIdx(ligne, colonne);
!!!154885.java!!!	newSoustractionMatrice(inout m : Matrice) : Matrice
		Matrice result = new Matrice(nombreLigne, nombreColonne);
		if(haveTheSameDimensions(m))
			for(int ligne = 0; ligne < nombreLigne; ligne++)
				for(int colonne = 0; colonne < nombreColonne; colonne++)
					result.setValueAtIdx(ligne, colonne, this.getValueAtIdx(ligne, colonne) - m.getValueAtIdx(ligne, colonne));
		return result;
!!!155013.java!!!	transposition() : void
		int temp = getNombreColonne();
		setNombreColonne(getNombreLigne());
		setNombreLigne(temp);
		
		int [][] tmp = new int [getNombreLigne()][getNombreColonne()];
		for(int colonne = 0; colonne < getNombreLigne(); colonne++)
			for(int ligne = 0; ligne < getNombreColonne(); ligne++)
				tmp[colonne][ligne] = this.matrice[ligne][colonne];
		setMatrice(tmp);
!!!155141.java!!!	multipliable(inout m : Matrice) : boolean
		return (getNombreColonne() == m.getNombreLigne());
!!!155269.java!!!	MultipliMatrice(inout m : Matrice) : Matrice
		Matrice result = new Matrice (getNombreLigne(), m.getNombreColonne());
		if(multipliable(m)){
			for(int ligne = 0; ligne < result.getNombreLigne(); ligne++)
				for(int colonne = 0; colonne < result.getNombreColonne(); colonne++)
					for(int etape = 0; etape < m.getNombreLigne(); etape++)
						result.getMatrice()[ligne][colonne] += getValueAtIdx(ligne, etape)*m.getValueAtIdx(etape, colonne);
		}
		return result;
!!!155397.java!!!	insertLigne(in idx : int, inout nouvelLigne : int [[]]) : void
		if(nouvelLigne.length != getNombreColonne())
			throw new IllegalArgumentException("Illegal size : " + nouvelLigne.length);
		if(idx < 0 || idx > getNombreLigne())
			throw new IllegalArgumentException("Illegal index : " + idx);
		
		int [][] tmp = new int [getNombreLigne() + 1][getNombreColonne()];
		
		for(int ligne = 0; ligne < idx; ligne++)
			for(int colonne = 0; colonne < getNombreColonne(); colonne++)
				tmp[ligne][colonne] = getValueAtIdx(ligne, colonne);
		
		for(int colonne = 0; colonne < getNombreColonne(); colonne++)
			tmp[idx][colonne] = nouvelLigne[colonne];
		
		for(int ligne = idx + 1; ligne < getNombreLigne() + 1; ligne++)
			for(int colonne = 0; colonne < getNombreColonne(); colonne++)
				tmp[ligne][colonne] = getValueAtIdx(ligne - 1, colonne);
		
		setNombreLigne(getNombreLigne() + 1);
		setMatrice(tmp);
!!!155525.java!!!	insertColonne(in idx : int, inout nouvelColonne : int [[]]) : void
		if(nouvelColonne.length != getNombreLigne())
			throw new IllegalArgumentException("Illegal size : " + nouvelColonne.length);
		if(idx < 0 || idx > getNombreColonne())
			throw new IllegalArgumentException("Illegal index : " + idx);
		
		int [][] tmp = new int [getNombreLigne()][getNombreColonne() + 1];
		
		for(int colonne = 0; colonne < idx; colonne++)
			for(int ligne = 0; ligne < getNombreLigne(); ligne++)
				tmp[ligne][colonne] = getValueAtIdx(ligne, colonne);
		
		for(int ligne = 0; ligne < getNombreLigne(); ligne++)
			tmp[ligne][idx] = nouvelColonne[ligne];
		
		for(int colonne = idx + 1; colonne < getNombreColonne() + 1; colonne++)
			for(int ligne = 0; ligne < getNombreLigne(); ligne++)
				tmp[ligne][colonne] = getValueAtIdx(ligne, colonne - 1);
		
		setNombreColonne(getNombreColonne() + 1);
		setMatrice(tmp);
!!!155653.java!!!	getNombreColonne() : int
		return nombreColonne;
!!!155781.java!!!	setNombreColonne(in nombreColonne : int) : void
		if(nombreColonne < 1)
			throw new IllegalArgumentException("Illegal nombreColonne : " + nombreColonne);
		this.nombreColonne = nombreColonne;
!!!155909.java!!!	getNombreLigne() : int
		return nombreLigne;
!!!156037.java!!!	setNombreLigne(in nombreLigne : int) : void
		if(nombreLigne < 1)
			throw new IllegalArgumentException("Illegal nombreLigne : " + nombreLigne);
		this.nombreLigne = nombreLigne;
!!!156165.java!!!	getMatrice() : int
		return matrice;
!!!156293.java!!!	setMatrice(inout matrice : int [[][]]) : void
		if(matrice.length != getNombreLigne() || matrice[0].length != getNombreColonne())
			throw new IllegalArgumentException("Array dimensions expected are : matrice["
												+ getNombreLigne() + "]["
												+ getNombreColonne() + "]");
		this.matrice = matrice;
!!!156421.java!!!	setMatrice(in ligne : int, in colonne : int) : void
		this.matrice = new int [ligne][colonne];
		for (int l = 0; l < matrice.length; l++)
			for(int c = 0; c < matrice[l].length; c++)
				matrice[l][c] = 0;			
!!!156549.java!!!	toString() : String
		String result = "";
		
		for(int ligne = 0; ligne < nombreLigne; ligne ++){
			result += this.getValueAtIdx(ligne, 0);
			for(int colonne = 1; colonne < nombreColonne; colonne++)
				result += "  " + this.getValueAtIdx(ligne, colonne);
			result += "\n";
		}
		return result;
