class Constante
!!!134533.java!!!	iniz() : void
        fenetre = gReader.dimensionFenetre(listePFAG().get(indexPFAGUtilise));
        allModul = new ArrayList<>();
        bird = new RougeGorge(null);
        fond = gReader.listeImage(listePFAG().get(indexPFAGUtilise));
        obstacle = new ArrayList<>();
        footstepX = new ArrayList<>();
        footstepY = new ArrayList<>();
        footstepA = new ArrayList<>();
        entityHitty = 0;
        last = false;
!!!134661.java!!!	listeFichier(in source : String, in extension : String) : HashMap<String, String>
        if (extension.length() < 1) {
            return null;
        }
        HashMap<String, String> sources = new HashMap<>();
        String tmp = "";
        String src = "";
        try {
            Path path = Paths.get(source);
            DirectoryStream<Path> stream;
            stream = Files.newDirectoryStream(path);
            try {
                Iterator<Path> iterator = stream.iterator();
                while (iterator.hasNext()) {
                    Path p = iterator.next();
                    tmp = p.toString();
                    tmp = tmp.substring(tmp.length() - extension.length());
                    if (tmp.equals(extension)) {
                        if (p.getName(0).toString().equals("src")) {
                            tmp = "";
                            for (int i = 1; i < p.getNameCount() - 1; i++) {
                                tmp += p.getName(i) + "/";
                            }
                        }
                        src = tmp + p.getName(p.getNameCount() - 1).toString();
                        tmp = p.getName(p.getNameCount() - 1).toString();
                        tmp = tmp.substring(0, tmp.length() - (extension.length() + 1));
                        sources.put(tmp, src);
                    }
                }
            } finally {
                stream.close();
            }
        } catch (IOException ex) {
            System.out.println("Bug lecture des sources, source ou/et extension incorectes");
        }
        return sources;
